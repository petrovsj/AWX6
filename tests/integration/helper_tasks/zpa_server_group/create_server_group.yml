---
- name: Set initial variables
  ansible.builtin.set_fact:
    name: "test_zpa_server_group"
    description: "test_zpa_server_group"
    enabled: true
    dynamic_discovery: true

- name: Ensure required environment variables are set
  fail:
    msg: "{{ item }} is not defined as environment variable"
  when: lookup('env', item) is none
  loop:
    - ZPA_CLIENT_ID
    - ZPA_CLIENT_SECRET
    - ZPA_CUSTOMER_ID

- ansible.builtin.set_fact:
    zpa_cloud:
      client_id: "{{ lookup('env', 'ZPA_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZPA_CLIENT_SECRET') }}"
      customer_id: "{{ lookup('env', 'ZPA_CUSTOMER_ID') }}"
      cloud: "{{ lookup('env', 'ZPA_CLOUD') | default(omit) }}"
  no_log: True

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: "../../generate_random_string.yml"

- ansible.builtin.set_fact:
    appended_name: "{{ name }}_{{ random_string }}"
    appended_description: "{{ description }}_{{ random_string }}"

- name: Include task to create app connector group
  ansible.builtin.include_tasks: "../zpa_app_connector_group/create_app_connector_group.yml"
  vars:
    acg_name: "test_zpa_app_connector_group_{{ random_string }}"
    acg_description: "test_zpa_app_connector_group_{{ random_string }}"

- name: Verify App Connector Group
  ansible.builtin.include_tasks: "../zpa_app_connector_group/verify_app_connector_group.yml"

- name: Check if app_connector_group_id is defined
  fail:
    msg: "app_connector_group_id is not defined or is empty"
  when: app_connector_group_id is not defined or app_connector_group_id == ''

- block:
    - name: Create Helper Server Group
      zscaler.zpacloud.zpa_server_group:
        state: present
        provider: "{{ zpa_cloud }}"
        name: "{{ appended_name }}"
        description: "{{ appended_description }}"
        enabled: "{{ enabled }}"
        dynamic_discovery: "{{ dynamic_discovery }}"
        app_connector_group_ids:
          - "{{ app_connector_group_id }}"
      register: server_group_result

    - name: Set Server Group ID as fact
      ansible.builtin.set_fact:
        server_group_id: "{{ server_group_result.data.id }}"
