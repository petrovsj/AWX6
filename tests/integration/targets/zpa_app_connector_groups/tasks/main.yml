---
- block:
    - name: Ensure ZPA API Credential is Set
      ansible.builtin.fail:
        msg: client_id, client_secret and customer_id should be defined in tests/integration/integration_config.yml
      when:
        - client_id is not defined
        - client_secret is not defined
        - customer_id  is not defined
        - client_id | length == 0
        - client_secret | length == 0
        - customer_id | length == 0

    - name: Ensure App Connector Group is absent (leftover)
      zscaler.zpacloud.zpa_app_connector_groups:
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        state: absent
        name: "{{ name }}"
      ignore_errors: true # In case one was left from previous run
      register: result

    - name: Ensure App Connector Group is absent
      zscaler.zpacloud.zpa_app_connector_groups:
        state: absent
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "{{ name }}"
      register: result

    - name: Verify App Connector Group is absent
      ansible.builtin.assert:
        that:
          - not result.changed

    # Create App Connector Groups (Present)
    - name: Ensure App Connector Group is (Present)
      zscaler.zpacloud.zpa_app_connector_groups:
        state: present
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "{{ name }}"
        description: "{{ description }}"
        enabled: "{{ enabled }}"
        city_country: "{{ city_country }}"
        country_code: "{{ country_code }}"
        latitude: "{{ latitude }}"
        longitude: "{{ longitude }}"
        location: "{{ location }}"
        upgrade_day: "{{ upgrade_day }}"
        upgrade_time_in_secs: "{{ upgrade_time_in_secs }}"
        override_version_profile: "{{ override_version_profile }}"
        version_profile_id: "{{ version_profile_id }}"
        dns_query_type: "{{ dns_query_type }}"
      register: result

    - name: Verify app connector group is present
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data.name is defined
          - result.data.name == name
          - result.data.enabled == true

    - name: Create the App Connector Group (again; idempotency check)
      zscaler.zpacloud.zpa_app_connector_groups:
        state: present
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "{{ name }}"
        description: "{{ description }}"
        enabled: "{{ enabled }}"
        city_country: "{{ city_country }}"
        country_code: "{{ country_code }}"
        latitude: "{{ latitude }}"
        longitude: "{{ longitude }}"
        location: "{{ location }}"
        upgrade_day: "{{ upgrade_day }}"
        upgrade_time_in_secs: "{{ upgrade_time_in_secs }}"
        override_version_profile: "{{ override_version_profile }}"
        version_profile_id: "{{ version_profile_id }}"
        dns_query_type: "{{ dns_query_type }}"
      register: result

    - name: Verify App Connector Group is absent (from absent)
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Fetch all App Connector Groups
      zscaler.zpacloud.zpa_app_connector_groups_info:
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
      register: result

    - name: Ensure all App Connector Groups found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data[0] is defined

    - name: Fetch this App Connector Group
      zscaler.zpacloud.zpa_app_connector_groups_info:
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "{{ name }}"
      register: result

    - name: Ensure this App Connector Group is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data[0].name is defined
          - result.data[0].name == name
          - result.data[0].enabled == true

    - name: Delete App Connector Group
      zscaler.zpacloud.zpa_app_connector_groups:
        state: absent
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "{{ name }}"
      register: result

    - name: Verify App Connector Group is Deleted
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete App Connector Group (again; idempotency check)
      zscaler.zpacloud.zpa_app_connector_groups:
        state: absent
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "{{ name }}"
      register: result

    - name: Verify App Connector Group is absent
      ansible.builtin.assert:
        that:
          - not result.changed