---
- name: Include default variables
  ansible.builtin.include_vars:
    file: "../defaults/main.yml"

- name: Ensure required environment variables are set
  fail:
    msg: "{{ item }} is not defined as environment variable"
  when: lookup('env', item) is none
  loop:
    - ZPA_CLIENT_ID
    - ZPA_CLIENT_SECRET
    - ZPA_CUSTOMER_ID

- ansible.builtin.set_fact:
    zpa_cloud:
      client_id: "{{ lookup('env', 'ZPA_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZPA_CLIENT_SECRET') }}"
      customer_id: "{{ lookup('env', 'ZPA_CUSTOMER_ID') }}"
      cloud: "{{ lookup('env', 'ZPA_CLOUD') | default(omit) }}"
  no_log: True

- block:
    - name: Fetch all Enrollment Certificates
      zscaler.zpacloud.zpa_enrollement_certificate_facts:
        provider: "{{ zpa_cloud }}"
      register: result

    - name: Ensure all Enrollment Certificates found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Fetch Root Certificate(s)
      zscaler.zpacloud.zpa_enrollement_certificate_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ root_certificate }}"
      register: result

    - name: Ensure Root Certificates found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Fetch Client Certificate
      zscaler.zpacloud.zpa_enrollement_certificate_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ client_certificate }}"
      register: result

    - name: Ensure Client Certificate is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Fetch Connector Certificate
      zscaler.zpacloud.zpa_enrollement_certificate_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ connector_certificate }}"
      register: result

    - name: Ensure Connector Certificate is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Fetch Service Edge Certificate
      zscaler.zpacloud.zpa_enrollement_certificate_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ service_edge_certificate }}"
      register: result

    - name: Ensure Service Edge Certificate is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Fetch Isolation Client Certificate
      zscaler.zpacloud.zpa_enrollement_certificate_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ isolation_certificate }}"
      register: result

    - name: Ensure Isolation Client Certificate is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
