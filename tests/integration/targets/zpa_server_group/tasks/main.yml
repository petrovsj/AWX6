---
- name: Include default variables
  ansible.builtin.include_vars:
    file: "../defaults/main.yml"

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: "../../../generate_random_string.yml"

- name: Create App Connector Group
  ansible.builtin.include_tasks: "../../../helper_tasks/zpa_app_connector_group/create_app_connector_group.yml"

- name: Verify App Connector Group
  ansible.builtin.include_tasks: "../../../helper_tasks/zpa_app_connector_group/verify_app_connector_group.yml"

- ansible.builtin.set_fact:
    appended_name: "{{ name }}_{{ random_string }}"
    appended_description: "{{ description }}_{{ random_string }}"

- name: Ensure required environment variables are set
  fail:
    msg: "{{ item }} is not defined as environment variable"
  when: lookup('env', item) is none
  loop:
    - ZPA_CLIENT_ID
    - ZPA_CLIENT_SECRET
    - ZPA_CUSTOMER_ID

- ansible.builtin.set_fact:
    zpa_cloud:
      client_id: "{{ lookup('env', 'ZPA_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZPA_CLIENT_SECRET') }}"
      customer_id: "{{ lookup('env', 'ZPA_CUSTOMER_ID') }}"
      cloud: "{{ lookup('env', 'ZPA_CLOUD') | default(omit) }}"
  no_log: True

- block:
    - name: Ensure Server Group is absent (leftover)
      zscaler.zpacloud.zpa_server_group:
        state: absent
        provider: "{{ zpa_cloud }}"
        name: "{{ appended_name }}"
      register: result

    - name: Ensure Server Group is absent
      zscaler.zpacloud.zpa_server_group:
        state: absent
        provider: "{{ zpa_cloud }}"
        name: "{{ appended_name }}"
      register: result

    - name: Verify Server Group is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    # Create Server Groups (Present)
    - name: Ensure Server Group is (Present)
      zscaler.zpacloud.zpa_server_group:
        state: present
        provider: "{{ zpa_cloud }}"
        name: "{{ appended_name }}"
        description: "{{ appended_description }}"
        enabled: "{{ enabled }}"
        dynamic_discovery: "{{ dynamic_discovery }}"
        app_connector_group_ids:
          - "{{ app_connector_group_id }}"
      register: result

    - name: Verify Server Group is present
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data is defined
          - result.data.name is defined
          - result.data.name == appended_name
          - result.data.enabled == true

    - name: Create the Server Group (again; idempotency check)
      zscaler.zpacloud.zpa_server_group:
        state: present
        provider: "{{ zpa_cloud }}"
        name: "{{ appended_name }}"
        description: "{{ appended_description }}"
        enabled: "{{ enabled }}"
        dynamic_discovery: "{{ dynamic_discovery }}"
        app_connector_group_ids:
          - "{{ app_connector_group_id }}"
      register: result

    - name: Verify Server Group is present (again; idempotency check)
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Fetch all Server Groups
      zscaler.zpacloud.zpa_server_group_info:
        provider: "{{ zpa_cloud }}"
      register: result

    - name: Ensure all Server Groups found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data[0] is defined

    - name: Fetch this Server Group
      zscaler.zpacloud.zpa_server_group_info:
        provider: "{{ zpa_cloud }}"
        name: "{{ appended_name }}"
      register: result

    - name: Ensure this Server Group is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data[0].name is defined
          - result.data[0].name == appended_name
          - result.data[0].enabled == true

    - name: Give the ZPA Cloud a 5 seconds to settle
      ansible.builtin.pause:
        seconds: 5

    - name: Delete Server Group
      zscaler.zpacloud.zpa_server_group:
        state: absent
        provider: "{{ zpa_cloud }}"
        name: "{{ appended_name }}"
      register: result

    - name: Verify Server Group is absent
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete Server Group (again; idempotency check)
      zscaler.zpacloud.zpa_server_group:
        state: absent
        provider: "{{ zpa_cloud }}"
        name: "{{ appended_name }}"
      register: result

    - name: Verify Server Group is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
# - name: Clean up App Connector group
#   include_tasks: "../../../helper_tasks/zpa_app_connector_group/delete_app_connector_group.yml"
