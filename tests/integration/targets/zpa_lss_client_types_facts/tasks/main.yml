---
- name: Include default variables
  ansible.builtin.include_vars:
    file: "../defaults/main.yml"

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZPA_CLIENT_ID
    - ZPA_CLIENT_SECRET
    - ZPA_CUSTOMER_ID
  loop_control:
    loop_var: env_var

- name: Ensure ZPA Credential environment variables are set
  ansible.builtin.set_fact:
    zpa_cloud:
      client_id: "{{ lookup('env', 'ZPA_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZPA_CLIENT_SECRET') }}"
      customer_id: "{{ lookup('env', 'ZPA_CUSTOMER_ID') }}"
      cloud: "{{ lookup('env', 'ZPA_CLOUD') | default(omit) }}"
  no_log: true

- name: Main block to Test LSS Client Types Information
  block:
    - name: Gather All LSS Client Types Information
      zscaler.zpacloud.zpa_lss_client_types_facts:
        provider: "{{ zpa_cloud }}"
      register: result

    - name: Verify All LSS client types info fetched
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Gather LSS Log Type zpn_client_type_exporter Information
      zscaler.zpacloud.zpa_lss_client_types_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ client_type1 }}"
      register: result

    - name: Verify lss log type zpn_client_type_exporter fetched
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Gather LSS Log Type zpn_client_type_machine_tunnel Information
      zscaler.zpacloud.zpa_lss_client_types_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ client_type2 }}"
      register: result

    - name: Verify lss log type zpn_client_type_machine_tunnel fetched
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Gather LSS Log Type zpn_client_type_ip_anchoring Information
      zscaler.zpacloud.zpa_lss_client_types_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ client_type3 }}"
      register: result

    - name: Verify lss log type zpn_client_type_ip_anchoring fetched
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Gather LSS Log Type zpn_client_type_edge_connector Information
      zscaler.zpacloud.zpa_lss_client_types_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ client_type4 }}"
      register: result

    - name: Verify lss log type zpn_client_type_edge_connector fetched
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Gather LSS Log Type zpn_client_type_zapp Information
      zscaler.zpacloud.zpa_lss_client_types_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ client_type5 }}"
      register: result

    - name: Verify lss log type zpn_client_type_zapp fetched
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Gather LSS Log Type zpn_client_type_slogger Information
      zscaler.zpacloud.zpa_lss_client_types_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ client_type6 }}"
      register: result

    - name: Verify lss log type zpn_client_type_slogger fetched
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Gather LSS Log Type zpn_client_type_zapp_partner Information
      zscaler.zpacloud.zpa_lss_client_types_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ client_type7 }}"
      register: result

    - name: Verify lss log type zpn_client_type_zapp_partner fetched
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Gather LSS Log Type zpn_client_type_branch_connector Information
      zscaler.zpacloud.zpa_lss_client_types_facts:
        provider: "{{ zpa_cloud }}"
        name: "{{ client_type8 }}"
      register: result

    - name: Verify lss log type zpn_client_type_branch_connector fetched
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
